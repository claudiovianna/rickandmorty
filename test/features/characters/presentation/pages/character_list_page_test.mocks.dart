// Mocks generated by Mockito 5.4.6 from annotations
// in universo_rick_v2/test/features/characters/presentation/pages/character_list_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mobx/mobx.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:universo_rick_v2/features/characters/domain/entities/character_entity.dart'
    as _i4;
import 'package:universo_rick_v2/features/characters/presentation/stores/character_store.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeObservableList_0<T> extends _i1.SmartFake
    implements _i2.ObservableList<T> {
  _FakeObservableList_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeReactiveContext_1 extends _i1.SmartFake
    implements _i2.ReactiveContext {
  _FakeReactiveContext_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [CharacterStore].
///
/// See the documentation for Mockito's code generation for more information.
class MockCharacterStore extends _i1.Mock implements _i3.CharacterStore {
  MockCharacterStore() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ObservableList<_i4.CharacterEntity> get characters =>
      (super.noSuchMethod(
            Invocation.getter(#characters),
            returnValue: _FakeObservableList_0<_i4.CharacterEntity>(
              this,
              Invocation.getter(#characters),
            ),
          )
          as _i2.ObservableList<_i4.CharacterEntity>);

  @override
  bool get isLoading =>
      (super.noSuchMethod(Invocation.getter(#isLoading), returnValue: false)
          as bool);

  @override
  set characters(_i2.ObservableList<_i4.CharacterEntity>? value) =>
      super.noSuchMethod(
        Invocation.setter(#characters, value),
        returnValueForMissingStub: null,
      );

  @override
  set isLoading(bool? value) => super.noSuchMethod(
    Invocation.setter(#isLoading, value),
    returnValueForMissingStub: null,
  );

  @override
  set errorMessage(String? value) => super.noSuchMethod(
    Invocation.setter(#errorMessage, value),
    returnValueForMissingStub: null,
  );

  @override
  _i2.ReactiveContext get context =>
      (super.noSuchMethod(
            Invocation.getter(#context),
            returnValue: _FakeReactiveContext_1(
              this,
              Invocation.getter(#context),
            ),
          )
          as _i2.ReactiveContext);

  @override
  _i5.Future<void> getAllCharacters() =>
      (super.noSuchMethod(
            Invocation.method(#getAllCharacters, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);
}
